"""Mensagem explicando a migração

Revision ID: 6341e4927ae9
Revises: 
Create Date: 2024-12-03 10:57:59.125492

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6341e4927ae9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('produtor')
    with op.batch_alter_table('fazendas', schema=None) as batch_op:
        batch_op.add_column(sa.Column('culturas', postgresql.ARRAY(sa.String()), nullable=False))

    with op.batch_alter_table('produtores', schema=None) as batch_op:
        batch_op.drop_column('cidade')
        batch_op.drop_column('area_vegetacao')
        batch_op.drop_column('area_total')
        batch_op.drop_column('area_agricultavel')
        batch_op.drop_column('estado')
        batch_op.drop_column('culturas')
        batch_op.drop_column('nome_fazenda')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('produtores', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nome_fazenda', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('culturas', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('estado', sa.VARCHAR(length=2), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('area_agricultavel', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('area_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('area_vegetacao', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('cidade', sa.VARCHAR(length=100), autoincrement=False, nullable=False))

    with op.batch_alter_table('fazendas', schema=None) as batch_op:
        batch_op.drop_column('culturas')

    op.create_table('produtor',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cpf_cnpj', sa.VARCHAR(length=18), autoincrement=False, nullable=False),
    sa.Column('nome_produtor', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('nome_fazenda', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cidade', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('area_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('area_agricultavel', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('area_vegetacao', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('culturas', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='produtor_pkey'),
    sa.UniqueConstraint('cpf_cnpj', name='produtor_cpf_cnpj_key')
    )
    # ### end Alembic commands ###
